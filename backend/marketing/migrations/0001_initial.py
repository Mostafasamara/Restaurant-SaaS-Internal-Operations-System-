# Generated by Django 4.2.7 on 2025-10-04 21:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalLead',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('location', models.CharField(help_text='City/Area', max_length=255)),
                ('instagram', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('new', 'New Lead'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('disqualified', 'Disqualified'), ('converted', 'Converted to Customer')], default='new', max_length=20)),
                ('contact_status', models.CharField(choices=[('not_called', 'Not Called'), ('called', 'Called'), ('left_message', 'Left Message'), ('no_answer', 'No Answer'), ('meeting_scheduled', 'Meeting Scheduled')], default='not_called', help_text='Current contact status', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', help_text='Lead priority level', max_length=20)),
                ('source', models.CharField(choices=[('website', 'Website Form'), ('facebook', 'Facebook Ad'), ('instagram', 'Instagram Ad'), ('google', 'Google Ad'), ('referral', 'Referral'), ('sales_sourced', 'Sales Sourced (Google Maps, etc.)'), ('chat', 'Support Chat'), ('other', 'Other')], max_length=20)),
                ('campaign_id', models.CharField(blank=True, help_text='Marketing campaign ID', max_length=100)),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('industry', models.CharField(blank=True, help_text='Restaurant industry/category (e.g., Italian, Fast Food)', max_length=100)),
                ('number_of_locations', models.IntegerField(default=0, help_text='Number of restaurant locations', validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_range', models.CharField(blank=True, help_text='Estimated monthly budget (e.g., $500-$1000)', max_length=50)),
                ('first_contact_due', models.DateTimeField(blank=True, help_text='First contact should be made by this time', null=True)),
                ('first_contacted_at', models.DateTimeField(blank=True, null=True)),
                ('last_contacted_at', models.DateTimeField(blank=True, help_text='Last time this lead was contacted', null=True)),
                ('converted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('converted_to_customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.customer')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical lead',
                'verbose_name_plural': 'historical leads',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('location', models.CharField(help_text='City/Area', max_length=255)),
                ('instagram', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('new', 'New Lead'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('disqualified', 'Disqualified'), ('converted', 'Converted to Customer')], default='new', max_length=20)),
                ('contact_status', models.CharField(choices=[('not_called', 'Not Called'), ('called', 'Called'), ('left_message', 'Left Message'), ('no_answer', 'No Answer'), ('meeting_scheduled', 'Meeting Scheduled')], default='not_called', help_text='Current contact status', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', help_text='Lead priority level', max_length=20)),
                ('source', models.CharField(choices=[('website', 'Website Form'), ('facebook', 'Facebook Ad'), ('instagram', 'Instagram Ad'), ('google', 'Google Ad'), ('referral', 'Referral'), ('sales_sourced', 'Sales Sourced (Google Maps, etc.)'), ('chat', 'Support Chat'), ('other', 'Other')], max_length=20)),
                ('campaign_id', models.CharField(blank=True, help_text='Marketing campaign ID', max_length=100)),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('industry', models.CharField(blank=True, help_text='Restaurant industry/category (e.g., Italian, Fast Food)', max_length=100)),
                ('number_of_locations', models.IntegerField(default=0, help_text='Number of restaurant locations', validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_range', models.CharField(blank=True, help_text='Estimated monthly budget (e.g., $500-$1000)', max_length=50)),
                ('first_contact_due', models.DateTimeField(blank=True, help_text='First contact should be made by this time', null=True)),
                ('first_contacted_at', models.DateTimeField(blank=True, null=True)),
                ('last_contacted_at', models.DateTimeField(blank=True, help_text='Last time this lead was contacted', null=True)),
                ('converted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
                ('converted_to_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='converted_from_lead', to='core.customer')),
            ],
            options={
                'db_table': 'leads',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['phone'], name='leads_phone_13acb4_idx'), models.Index(fields=['instagram'], name='leads_instagr_559d0a_idx'), models.Index(fields=['status'], name='leads_status_94f025_idx'), models.Index(fields=['assigned_to'], name='leads_assigne_c5180e_idx')],
            },
        ),
    ]
